// Generated by view binder compiler. Do not edit!
package com.example.itbook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.itbook.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBookDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imgBook;

  @NonNull
  public final TextView txtBookIsbn;

  @NonNull
  public final TextView txtBookPrice;

  @NonNull
  public final TextView txtBookSubTitle;

  @NonNull
  public final TextView txtBookTitle;

  @NonNull
  public final TextView txtBookUrl;

  private ActivityBookDetailsBinding(@NonNull LinearLayout rootView, @NonNull ImageView imgBook,
      @NonNull TextView txtBookIsbn, @NonNull TextView txtBookPrice,
      @NonNull TextView txtBookSubTitle, @NonNull TextView txtBookTitle,
      @NonNull TextView txtBookUrl) {
    this.rootView = rootView;
    this.imgBook = imgBook;
    this.txtBookIsbn = txtBookIsbn;
    this.txtBookPrice = txtBookPrice;
    this.txtBookSubTitle = txtBookSubTitle;
    this.txtBookTitle = txtBookTitle;
    this.txtBookUrl = txtBookUrl;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBookDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBookDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_book_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBookDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgBook;
      ImageView imgBook = ViewBindings.findChildViewById(rootView, id);
      if (imgBook == null) {
        break missingId;
      }

      id = R.id.txtBookIsbn;
      TextView txtBookIsbn = ViewBindings.findChildViewById(rootView, id);
      if (txtBookIsbn == null) {
        break missingId;
      }

      id = R.id.txtBookPrice;
      TextView txtBookPrice = ViewBindings.findChildViewById(rootView, id);
      if (txtBookPrice == null) {
        break missingId;
      }

      id = R.id.txtBookSubTitle;
      TextView txtBookSubTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtBookSubTitle == null) {
        break missingId;
      }

      id = R.id.txtBookTitle;
      TextView txtBookTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtBookTitle == null) {
        break missingId;
      }

      id = R.id.txtBookUrl;
      TextView txtBookUrl = ViewBindings.findChildViewById(rootView, id);
      if (txtBookUrl == null) {
        break missingId;
      }

      return new ActivityBookDetailsBinding((LinearLayout) rootView, imgBook, txtBookIsbn,
          txtBookPrice, txtBookSubTitle, txtBookTitle, txtBookUrl);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
